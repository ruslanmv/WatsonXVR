



#pragma once

#include <CoreMinimal.h>
#include <Engine/DeveloperSettings.h>
#include "Structures/WatsonxVRCommonTypes.h"
#include "Structures/WatsonxVRChatTypes.h"
#include "Structures/WatsonxVRImageTypes.h"
#include "WatsonxVRSettings.generated.h"

/**
 *
 */
UCLASS(Config = Plugins, DefaultConfig, meta = (DisplayName = "WatsonxVR"))
class WatsonxVRCOMMONMODULE_API UWatsonxVRSettings : public UDeveloperSettings
{
	GENERATED_BODY()

public:
	explicit UWatsonxVRSettings(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get());

	static const UWatsonxVRSettings* Get();

	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Default Options", Meta = (DisplayName = "Common Options"))
	FWatsonxVRCommonOptions CommonOptions;

	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Default Options", Meta = (DisplayName = "Chat Options"))
	FWatsonxVRChatOptions ChatOptions;

	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Default Options", Meta = (DisplayName = "Image Options"))
	FWatsonxVRImageOptions ImageOptions;

	/* Enable custom system context in WatsonxVR Chat Editor Tool */
	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Editor | WatsonxVR Chat", Meta = (DisplayName = "Use Custom System Context"))
	bool bUseCustomSystemContext;

	/* Custom system context to use in WatsonxVR Chat Editor Tool */
	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Editor | WatsonxVR Chat",
		Meta = (DisplayName = "Custom System Context", EditCondition = "bUseCustomSystemContext"))
	FString CustomSystemContext;

	/* Directory to store images generated by WatsonxVR Image Generator Editor Tool */
	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Editor | WatsonxVR Image Generator", Meta = (DisplayName = "Generated Images Directory"))
	FString GeneratedImagesDir;

	/* Will print extra internal informations in log */
	UPROPERTY(GlobalConfig, EditAnywhere, Category = "Logging", Meta = (DisplayName = "Enable Internal Logs"))
	bool bEnableInternalLogs;

	UFUNCTION(BlueprintPure, Category = "WatsonxVR | Settings",
		meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Get Common Options", CompactNodeTitle = "WatsonxVR Common Options"))
	static FWatsonxVRCommonOptions GetCommonOptions();

	UFUNCTION(BlueprintCallable, Category = "WatsonxVR | Settings",
		meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Set Common Options"))
	static void SetCommonOptions(const FWatsonxVRCommonOptions& Value);

	UFUNCTION(BlueprintPure, Category = "WatsonxVR | Settings",
		meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Get Chat Options", CompactNodeTitle = "WatsonxVR Chat Options"))
	static FWatsonxVRChatOptions GetChatOptions();

	UFUNCTION(BlueprintCallable, Category = "WatsonxVR | Settings", meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Set Chat Options"))
	static void SetChatOptions(const FWatsonxVRChatOptions& Value);

	UFUNCTION(BlueprintPure, Category = "WatsonxVR | Settings",
		meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Get Image Options", CompactNodeTitle = "WatsonxVR Image Options"))
	static FWatsonxVRImageOptions GetImageOptions();

	UFUNCTION(BlueprintCallable, Category = "WatsonxVR | Settings",
		meta = (HidePin = "Self", DefaultToSelf = "Self", DisplayName = "Set Image Options"))
	static void SetImageOptions(const FWatsonxVRImageOptions& Value);

protected:
#if WITH_EDITOR
	virtual void PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent) override;
#endif

	virtual void PostInitProperties() override;

	virtual void SetToDefaults();

	void SaveAndReload(const FName& PropertyName);

private:
	void ToggleInternalLogs();
};
